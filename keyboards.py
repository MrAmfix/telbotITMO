
""" –ú–æ–¥—É–ª—å: keyboards.py
–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: –≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä.
"""

import base

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


def create_table_keyboard(table_id: int | str, width: int = 1) -> InlineKeyboardMarkup:
    """
        –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —è—á–µ–π–∫–∞–º–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ.

        :param table_id: ID —Ç–∞–±–ª–∏—Ü—ã.
        :param width: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1).

        :return: InlineKeyboardMarkup: –û–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏.
    """
    buttons = []
    buttons_format = []
    for note in base.Select.notes_from_tables(table_id):
        note_content = base.Select.note_content_from_notes(note)
        if note_content.student_id is None:
            buttons.append(InlineKeyboardButton(text=f'{note_content.time_range}',
                                                callback_data=f'add_{note},{table_id}'))
        else:
            buttons.append(InlineKeyboardButton(text=f'üîí {note_content.time_range}\n'
                                                     f'{base.Select.fullname_from_users(note_content.student_id)}',
                                                callback_data=f'del_{note},{table_id}'))
    i = 0
    buttons_format.append([])
    for button in buttons:
        buttons_format[-1].append(button)
        i += 1
        if i == width:
            i = 0
            buttons_format.append([])
    return InlineKeyboardMarkup(inline_keyboard=buttons_format)
